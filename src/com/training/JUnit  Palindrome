package mavenjunit;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

import srcpack.Palindrome;


public class PalindromeTest {

@Test
public void testpalindrone()

{
// PalindromeTest test = new PalindromeTest(); // Palindrome is tested

// assert statements
assertEquals("true", Palindrome.isPalindrome(121));
assertEquals("false", Palindrome.isPalindrome(456),false);
assertEquals("false", Palindrome.isPalindrome(-121),false);
assertEquals("false", Palindrome.isPalindrome(-456), false);

}
 

}







package srcpack;

 

/*Program name        : Pallindrome
 * Program Description : Determine whether an integer is a palindrome. An integer is a
 * palindrome when it reads the same backward as forward. 
 *  Date created : 16-April-2018
 */

import java.util.*;
import java.util.logging.Logger;



public class Palindrome {
 
public static void main(String[] args) { 
        final Scanner read=new Scanner(System.in);
        final Logger lps=Logger.getLogger(Palindrome.class.getName());
int number;
 
// lps.info("Enter the number \t");
number=read.nextInt();
if(isPalindrome(number))
lps.info(number + " is a Palindrome Number.");
     else
         lps.info(number + " is not a Palindrome Number.");
 
}
//function to check number is Palindrome or not
    public static boolean isPalindrome(int num)
    {
    int rem,sum=0,temp;
    temp=num;
    while(num>0)
      {     
       rem=num%10;  //getting remainder  
       sum=sum*10 +rem;    
       num=num/10;
      }
      if(temp==sum)    
      {
       
    return true;    
      
      }
      else 
      {
      return false;  
      }
    }
     
 }
